@model RecipeViewModel

<div>
    <form asp-action="Edit" enctype="multipart/form-data">
        @Html.HiddenFor(model => model.Recipe.Id)
        @Html.HiddenFor(model => model.Recipe.ImagesDirectory)
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        
        <h3>General info</h3>
        <div class="input-group mb-3">
            <input asp-for="Recipe.Title" class="form-control" placeholder="Title"/>
            <span asp-validation-for="Recipe.Title" class="text-danger"></span>
        </div>       
        <div class="input-group mb-3">
            <textarea asp-for="Recipe.Description" class="form-control" placeholder="Description"></textarea>
            <span asp-validation-for="Recipe.Description" class="text-danger"></span>
        </div>

        <h3>Directions</h3>
        <div class="steps-target-element">
            <div class="input-group mb-3">
                <textarea name="Recipe.Steps[0]" class="form-control" placeholder="Step description">@Model.Recipe.Steps[0]</textarea>
                <span asp-validation-for="Recipe.Steps[0]" class="text-danger"></span>
                <button class="btn btn-primary input-group-text remove-step-btn">Remove step</button>
            </div>

            @for (int i = 1; i < Model.Recipe.Steps.Count; i++)
                {
                    <div class="input-group mb-3">
                        <textarea name="Recipe.Steps[i]" class="form-control" placeholder="Step description">@Model.Recipe.Steps[i]</textarea>
                        <span asp-validation-for="Recipe.Steps[i]" class="text-danger"></span>
                        <button class="btn btn-primary input-group-text remove-step-btn">Remove step</button>
                    </div>
                }
        </div>
        <div class="input-group mb-3">
            <button class="btn btn-primary add-step-btn">Add another step</button>
        </div>

        <h3>Ingredients list</h3>
        <div class="row ingredients-target-element">
            <div class="input-group mb-3">
                <input asp-for="Recipe.Ingredients[0]" class="form-control" placeholder="Required ingredient" value="@Model.Recipe.Ingredients[0]"/>
                <span asp-validation-for="Recipe.Ingredients[0]" class="text-danger"></span>
                <button class="btn btn-primary input-group-text remove-ingredient-btn">Remove ingredient</button>
            </div>

            @for (int i = 1; i < Model.Recipe.Ingredients.Count; i++)
                {
                    <div class="input-group mb-3">
                        <input asp-for="Recipe.Ingredients[i]" class="form-control" placeholder="Required ingredient" value="@Model.Recipe.Ingredients[i]"/>
                        <span asp-validation-for="Recipe.Ingredients[i]" class="text-danger"></span>
                        <button class="btn btn-primary input-group-text remove-ingredient-btn">Remove ingredient</button>
                    </div>
                }
        </div>
        <div class="input-group mb-3">
            <button class="btn btn-primary add-ingredient-btn">Add another ingredient</button>
        </div>

        <div class="images-target-element">
            <div class="input-group mb-3">
                <input name="FileManager.IFormFiles" type="file" class="form-control" placeholder="Upload an image" multiple/>
                <span asp-validation-for="FileManager.IFormFiles" class="text-danger"></span>
            </div>
            <h3>Currently uploaded images:</h3>
            <div class="mb-3">
                @foreach(var image in Model.FileManager.Files)
                {
                    <img class="rounded" title="@image.Name" src="@image.FullName.Substring(@image.FullName.LastIndexOf("\\uploads"))" style="width: 100%; max-width: 170px; max-height: 170px;">
                    <button class="btn btn-danger" asp-action="DeleteImage" asp-route-fname="@($"{image.DirectoryName}/{image.Name}")">X</button>
                }
            </div>
        </div>

        <div class="form-group">
            <input type="submit" value="Save changes" class="btn btn-primary"/>
        </div>
    </form>
</div>

@section Scripts{
    <script type="text/javascript">      
        const addStepButton = document.querySelector(".add-step-btn");
        const addIngredientButton = document.querySelector(".add-ingredient-btn");

        const stepsTargetElement = document.querySelector(".steps-target-element")
        const ingredientsTargetElement = document.querySelector(".ingredients-target-element")

        addStepButton.addEventListener("click", function (e) {
            e.preventDefault();
            addStepField();
        });

        addIngredientButton.addEventListener("click", function (e) {
            e.preventDefault();
            addIngredientField();
        });

        var removeStepsButtons = document.querySelectorAll('.remove-step-btn');
        removeStepsButtons.forEach((element) => {
            element.addEventListener("click", function(e) {removeStepField(e);});
        });

        var removeIngredientButtons = document.querySelectorAll('.remove-ingredient-btn');
        removeIngredientButtons.forEach((element) => {
            element.addEventListener("click", function(e) {removeIngredientField(e);});
        });

        function addStepField() {
            let stepsCounter = stepsTargetElement.children.length;
            let div = document.createElement('div');
            div.classList = "input-group mb-3";
            div.innerHTML = `        
                                <textarea name="Recipe.Steps[${stepsCounter}]" class="form-control" placeholder="Step description"></textarea>
                                <span asp-validation-for="Recipe.Steps[${stepsCounter}]" class="text-danger"></span>
                            `;

            let removeBtn = document.createElement('button');
            removeBtn.classList = "btn btn-primary input-group-text remove-step-btn";
            removeBtn.innerText = "Remove step";

            removeBtn.addEventListener('click', function(e){
                removeStepField(e);
            })

            div.appendChild(removeBtn);
            stepsTargetElement.append(div);
        }

        function addIngredientField() {
            let ingredientCounter = ingredientsTargetElement.children.length;
            let div = document.createElement('div');
            div.classList = "input-group mb-3";
            div.innerHTML = `        
                                <input name="Recipe.Ingredients[${ingredientCounter}]" class="form-control" placeholder="Required ingredient"/>
                                <span asp-validation-for="Recipe.Ingredients[${ingredientCounter}]" class="text-danger"></span>
                            `;

            let removeBtn = document.createElement('button');
            removeBtn.classList = "btn btn-primary input-group-text remove-ingredient-btn";
            removeBtn.innerText = "Remove ingredient";

            div.appendChild(removeBtn);

            removeBtn.addEventListener('click', function (e){
                removeIngredientField(e);
            })

            div.appendChild(removeBtn);
            ingredientsTargetElement.append(div);
        }

        function removeIngredientField(e) {
            e.preventDefault();
            e.currentTarget.parentNode.remove();

            if (ingredientsTargetElement.children.length == 0){
                addIngredientField();
            }
        }

        function removeStepField(e) {
            e.preventDefault();
            e.currentTarget.parentNode.remove();

            if (stepsTargetElement.children.length == 0){
                addStepField();
            }
        }
    </script>
}